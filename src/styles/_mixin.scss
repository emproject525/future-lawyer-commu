@use 'variable';
@use 'sass:map';

@mixin mobile {
  @media (min-width: 0px) and (max-width: #{variable.$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{variable.$breakpoint-tablet}px) and (max-width: #{variable.$breakpoint-desktop - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{variable.$breakpoint-desktop}px) {
    @content;
  }
}

/*------------------------
mixin that calculates if text needs to be light or dark
depending on the background color passed.

From this W3C document: http://www.webmasterworld.com/r.cgi?f=88&d=9769&url=http://www.w3.org/TR/AERT#color-contrast
			
Color brightness is determined by the following formula: 
((Red value X 299) + (Green value X 587) + (Blue value X 114)) / 1000

https://codepen.io/davidhalford/pen/ALrbEP
------------------------*/
@mixin text-contrast($n) {
  $color-brightness: round(
    (red($n) * 299) + (green($n) * 587) + (blue($n) * 114) / 1000
  );
  $light-color: round(
    (red(#ffffff) * 299) + (green(#ffffff) * 587) + (blue(#ffffff) * 114) / 1000
  );

  @if abs($color-brightness) < ($light-color/2) {
    color: white;
  } @else {
    color: black;
  }
}

// 지정한 컬러를 배경색으로 설정, 텍스트는 대조색으로 설정
@mixin set-bgcolor($color) {
  background-color: $color;
  @include text-contrast($color);
}

// 지정한 컬러를 border 색상으로 설정
@mixin set-border(
  $border-color,
  $bgcolor: #{variable.$white},
  $text-color: #{variable.$black}
) {
  border: 1px solid $border-color;
  background-color: $bgcolor;
  color: $text-color;
}
